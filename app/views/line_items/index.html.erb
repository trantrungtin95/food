<p id="notice"><%= notice %></p>

<h1>Line Items</h1>

<p><strong>Mã đơn hàng: <%= @order.id %></strong></p>
<% if @order.status == "Unprocessed" %>
<% else %>
  <p><strong>Shipper: <%= ShipperOrder.where(order_id: @order.id).first.shipper.name %></strong></p>
<% end %>

<p><strong>Name: </strong><%= @order.name %></p>
<p><strong>Address: </strong><%= @order.address %></p>
<p><strong>Email: </strong><%= @order.email %></p>
<p><strong>Pay_type: </strong><%= @order.pay_type %></p>

<table>
  <thead>
    <tr>
      <th>Dish</th>
      <th>Quantity</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @line_items.each do |line_item| %>
      <tr>
        <td><%= line_item.dish.name %></td>
        <td><%= line_item.quantity%>x</td>
        <td class="item_price"><%= number_to_currency(line_item.total_price) %></td>
      </tr>
    <% end %>
    <tr class="total_line">
      <td colspan="2">Total</td>
      <td class="total_cell"><%= number_to_currency(@line_items.to_a.sum { |item| item.total_price }) %></td>
    </tr>
  </tbody>
</table>

<% if @order.status == "Processing" %>
  <%= button_to 'Completed Order!', completed_order_path(@order) %>
  <% elsif @order.status == "Unprocessed" %>
    <% if @current_user.uncompleted_order %>
    <% else %>
      <%= button_to 'Receive Order', receive_order_user_path(@current_user, :order_id => @order.id) %>
    <% end %>
<% end %>

<br>
<div id='demo'></div>
<div id="order" data-order='<%= @order.id%>'>

<% if @order.status == "Processing" %>
  <% @shipper=ShipperOrder.where(order_id: @order.id).first.shipper %>
  <div id='shipper' data-shipper='<%= @shipper.id %>'></div>
<% elsif @current_user.shipper_by(@current_user) && @order.status == "Unprocessed" %>
  <% @shipper = Shipper.where(user_id: @current_user.id).first %>
  <div id='shipper' data-shipper='<%= @shipper.id %>'></div>
<% end %>

<div id='location-order' data-id='<%= @order.location_order(@order.address) %>'></div>
<div class="row">
  <div style='width: 400px; padding-left: 350px;'>  
    <div id="map" style='width: 800px; height: 600px;'>
    </div>  
  </div>  
</div>


<script>

var address = $('#location-order').data('id');
var x = document.getElementById("demo");
var shipper_marker = null;

function getLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(showPosition);
  } else {
    x.innerHTML = "Geolocation is not supported by this browser.";
  }
}

function showPosition(position) {
  window.latitude = position.coords.latitude,
  window.longitude = position.coords.longitude,
  $.get(`/users/shipper_location`, { latitude: window.latitude, longitude: window.longitude }, function(data) {
        console.log();
        setTimeout(getLocation, 2000);
    } );
}

getLocation();

var shipper_id = $('#shipper').data('shipper')
function getLocationShipper() {
  if (shipper_id) {
  $.get(`/users/get_shipper_location`, { shipper_id: shipper_id }, function(data) {
        window.shipper = data;
        console.log(window.shipper);
        shipperMarker(window.shipper);
    } );
  setTimeout(getLocationShipper, 2000);
  }
}

getLocationShipper();

function shipperMarker(shipper) {
        if ( shipper_marker ) {
          shipper_marker.setMap(null);
          } 
        shipper_marker = new google.maps.Marker({
          position: {
            lat: shipper.latitude, 
            lng: shipper.longitude
            }, 
          label: shipper.name, 
          map: window.map
        });
}

var order_id = $('#order').data('order');
function getLocationRestaurant() {
  $.get(`/orders/get_location_restaurants`, { order_id: order_id }, function(restaurants) {
        console.log(restaurants);
        markerRestaurant(restaurants);
    } );
}

getLocationRestaurant()

function markerRestaurant(restaurants) {
    $.each(restaurants, function(index,restaurant) {
    var resmarker = new google.maps.Marker({
      position: {
        lat: restaurant.latitude, 
        lng: restaurant.longitude
        }, 
      label: restaurant.name, 
      map: window.map
      });
    });
}

function initMap() {
    var lat = address[0];
    var lng = address[1];
    var uluru = {lat, lng};
    window.map = new google.maps.Map(document.getElementById('map'), {zoom: 12, center: uluru});
    var marker = new google.maps.Marker({position: uluru, map: window.map});
  }
</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCzs2ja1HKuzIFiccxeB-SFpqOg9WMUk3g&callback=initMap"
type="text/javascript"></script>